// NOTE: the config is in HOCON format [1][2][3].
//       [1] https://en.wikipedia.org/wiki/HOCON
//       [2] https://www.playframework.com/documentation/2.6.x/ConfigFile
//       [3] https://github.com/typesafehub/config/blob/master/HOCON.md
//       By convention property names are lowercase.
//       By convention env. variable name are uppercase.

com.microsoft.azure.iotsolutions {
  iot-stream-analytics {
    // nothing yet
  }
}

play.crypto.secret="change me e.g. use env var"

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  # See https://www.playframework.com/documentation/2.6.x/AllowedHostsFilter
  allowed = ["."]
}

http {
  port : ${PCS_STREAMANALYTICS_WEBSERVICE_PORT}
}

akka {
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel: INFO
}

iothub-react {

  connection {
    // see: Endpoints ⇒ Messaging ⇒ Events ⇒ "Event Hub-compatible name"
    // e.g. "my-test-hub"
    hubName        = ${PCS_IOTHUBREACT_HUB_NAME}
    // see: Endpoints ⇒ Messaging ⇒ Events ⇒ "Event Hub-compatible endpoint"
    // e.g. "iothub-ns-my-test-185521-d1bf252916.servicebus.windows.net"
    hubEndpoint    = ${PCS_IOTHUBREACT_HUB_ENDPOINT}
    // see: Endpoints ⇒ Messaging ⇒ Events ⇒ Partitions
    // e.g. 4
    hubPartitions  = ${PCS_IOTHUBREACT_HUB_PARTITIONS}
    // see: "IoT Hub" ⇒ your hub ⇒ "Shared access policies"
    // e.g. you should use the predefined "service" policy
    accessPolicy   = ${PCS_IOTHUBREACT_ACCESS_POLICY}
    // see: Shared access policies ⇒ key name ⇒ Primary key
    accessKey      = ${PCS_IOTHUBREACT_ACCESS_KEY}
    // see: Shared access policies ⇒ key name ⇒ Connection string ⇒ "HostName"
    // e.g. "my-test-hub..azure-devices.net"
    accessHostName = ${PCS_IOTHUBREACT_ACCESS_HOSTNAME}
  }

  streaming {
    // see: "IoT Hub" >> your hub > "Messaging" >> Consumer groups
    // "$Default" is predefined and is the typical scenario
    consumerGroup = "$Default"
    // How many messages to retrieve on each pull, max is 999
    receiverBatchSize = 999
    // Value expressed as a duration, e.g. 3s, 3000ms, "3 seconds", etc.
    receiverTimeout = 5s
    // Whether to retrieve information about the partitions while streming events from IoT Hub
    retrieveRuntimeInfo = false
  }
}
