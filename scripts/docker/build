#!/usr/bin/env bash

set -e
APP_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && cd .. && pwd )/"
source "$APP_HOME/scripts/.functions.sh"

# Whether to update the "latest" tag of the Docker image
BUILD_LATEST="no"

cd $APP_HOME
APP_VERSION=$(cat build.sbt|tr -d ' ",'|grep ^version|cut -d'=' -f 2)

confirm_version() {
    echo "Building version $APP_VERSION"
    read -r -p "Do you want to update the 'latest' version too? [y/N] " response
    response=${response,,} # tolower
    if [[ $response =~ ^(no|n| ) ]] | [ -z $response ]; then
        BUILD_LATEST="no"
    else
        BUILD_LATEST="yes"
    fi
}

sbt_build_docker_image() {
    check_dependency_java
    check_dependency_docker

    cd $APP_HOME
    chmod +x sbt

    ./sbt docker:stage

    cp -pR $APP_HOME/scripts/docker/content/* target/docker/stage/app
    cd target/docker/stage

    if [[ $BUILD_LATEST == "no" ]]; then
        docker build . -t azureiotpcs/iot-stream-analytics-java:$APP_VERSION
    else
        docker build -t azureiotpcs/iot-stream-analytics-java:latest .
        IMGID=$(docker images|grep 'azureiotpcs/iot-stream-analytics-java'|grep latest|tr -s ' '|cut -d' ' -f 3)
        docker tag $IMGID azureiotpcs/iot-stream-analytics-java:$APP_VERSION
    fi
}

confirm_version
sbt_build_docker_image

set +e
